long countWaysToMakeChange(int *denominations, int n, int value)
{
   vector<vector<long long>>dp(n,vector<long long>(value+1,0));
   for(int i=0;i<n;i++){
       dp[i][0]=1;
   }
   for(int i=0;i<value+1;i++){
       dp[0][i]=(i%denominations[0]==0);
   }
   for(int i=1;i<n;i++){
       for(int j=1;j<=value;j++){
           long long nottake=dp[i-1][j];
           long long take=0;
           if(j>=denominations[i])
              take=dp[i][j-denominations[i]];
           dp[i][j]=nottake+take;
       }
   }
   return dp[n-1][value];

}