int maxProfit(vector<int> &values, vector<int> &weights, int n, int w)
{
  vector<vector<int>>dp(n,vector<int>(w+1,0));
  for(int i=0;i<=w;i++){
	  if(weights[0]<=i)
	    dp[0][i]=values[0];
  }
  for(int i=1;i<n;i++){
	  for(int j=1;j<=w;j++){
		 int nottake=dp[i-1][j];
	     int take=0;
	     if(j>=weights[i])
	     take=values[i]+dp[i-1][j-weights[i]];
		 dp[i][j]=max(take,nottake);

	  }
  }
  return dp[n-1][w];
	
}