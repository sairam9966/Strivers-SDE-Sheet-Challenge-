
vector<int> bottomView(BinaryTreeNode<int> * root){

    vector<int>ans;
    map<int,int>mp;
    queue<pair<BinaryTreeNode<int> * ,int>>q;
    q.push({root,0});
    while(!q.empty()){
      int n=q.size();
      for(int i=0;i<n;i++){
         auto temp=q.front();
         q.pop();
         mp[temp.second]=temp.first->data;
         if(temp.first->left){
           q.push({temp.first->left,temp.second-1});
         }
         if(temp.first->right){
           q.push({temp.first->right,temp.second+1});
         }
      }
    }
    for(auto a:mp){
        ans.push_back(a.second);
    }
    return ans;
}
